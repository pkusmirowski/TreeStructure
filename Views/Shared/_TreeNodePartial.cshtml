@model TreeStructure.Models.Tree

<li class="list-group-item tree-node" data-id="@Model.Id">
    <div class="d-flex justify-content-between align-items-center">
        <span>@Model.Folder</span>
        <div class="btn-group">
            <button class="btn btn-dark btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                Opcje
            </button>
            <ul class="dropdown-menu">
                <li>
                    <button class="dropdown-item" data-bs-toggle="modal" data-bs-target="#actionModal"
                            onclick="setModalData('@Model.Id', 'Dodaj węzeł', '/Tree/AddElement', 'name', 'Wprowadź nazwę węzła:')">
                        Dodaj
                    </button>
                </li>
                <li>
                    <button class="dropdown-item" data-bs-toggle="modal" data-bs-target="#actionModal"
                            onclick="setModalData('@Model.Id', 'Usuń węzeł', '/Tree/DeleteElement', '', 'Czy na pewno chcesz usunąć ten węzeł i wszystkie jego elementy podrzędne?')">
                        Usuń
                    </button>
                </li>
                <li>
                    <button class="dropdown-item" data-bs-toggle="modal" data-bs-target="#actionModal"
                            onclick="setModalData('@Model.Id', 'Zmień nazwę węzła', '/Tree/EditElement', 'name', 'Wprowadź nową nazwę węzła:')">
                        Zmień nazwę
                    </button>
                </li>
                <li>
                    <button class="dropdown-item" data-bs-toggle="modal" data-bs-target="#actionModal"
                            onclick="setModalData('@Model.Id', 'Przenieś węzeł', '/Tree/MoveElement', 'newId', 'Wybierz nowe ID rodzica:')">
                        Przenieś
                    </button>
                </li>
            </ul>
        </div>
    </div>

    @if (Model.InverseParent.Any())
    {
        <ul class="list-group mt-2">
            @foreach (var child in Model.InverseParent)
            {
                @await Html.PartialAsync("_TreeNodePartial", child)
            }
        </ul>
    }
</li>

<!-- Action Modal -->
<div class="modal fade" id="actionModal" tabindex="-1" role="dialog" aria-labelledby="actionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="actionModalLabel"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="modalForm" method="post">
                    <input type="hidden" name="id" id="modalId" />
                    <div id="modalContent"></div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Zamknij</button>
                <button type="submit" form="modalForm" class="btn btn-primary">Zapisz</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function setModalData(id, title, action, inputName, message) {
            document.getElementById('actionModalLabel').innerText = title;
            document.getElementById('modalForm').action = action;
            document.getElementById('modalId').value = id;

            const modalContent = document.getElementById('modalContent');
            modalContent.innerHTML = "";

            if (message) {
                const messageLabel = document.createElement('label');
                messageLabel.innerText = message;
                modalContent.appendChild(messageLabel);
            }

            if (inputName) {
                const inputField = document.createElement('input');
                inputField.type = "text";
                inputField.name = inputName;
                inputField.className = "form-control";
                inputField.required = true;
                modalContent.appendChild(inputField);
            }
        }
    </script>
}

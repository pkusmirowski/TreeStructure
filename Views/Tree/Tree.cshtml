@model TreeStructure.VM.TreeVM

<div>
    @if (ViewBag.Success != null)
    {
        <h4 class="text-success">@ViewBag.Success</h4>
    }
    else if (ViewBag.Failure != null)
    {
        <h4 class="text-danger">@ViewBag.Failure</h4>
    }

    <ul>
        @if (Model.InverseParent != null && Model.InverseParent.Any())
        {
            @foreach (var node in Model.InverseParent)
            {
                @await Html.PartialAsync("_TreeNodePartial", node)
            }
        }
    </ul>
</div>


<!-- Dynamiczny modal -->
<div class="modal fade" id="actionModal" tabindex="-1" role="dialog" aria-labelledby="actionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="actionModalLabel"></h5>
            </div>
            <div class="modal-body">
                <form id="modalForm" method="post">
                    <input type="hidden" name="id" id="modalId" />
                    <div id="modalContent"></div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Zamknij</button>
                <button type="submit" form="modalForm" class="btn btn-primary">Zapisz</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        // Funkcja do ustawiania danych w modalu
        function setModalData(id, title, action, inputName, message) {
            document.getElementById('actionModalLabel').innerText = title;
            document.getElementById('modalForm').action = action;
            document.getElementById('modalId').value = id;

            const modalContent = document.getElementById('modalContent');
            modalContent.innerHTML = "";

            if (message) {
                const messageLabel = document.createElement('label');
                messageLabel.innerText = message;
                modalContent.appendChild(messageLabel);
            }

            if (inputName === 'newId') {
                const select = document.createElement('select');
                select.name = 'newId';
                select.className = 'form-select';
                select.required = true;

                const defaultOption = document.createElement('option');
                defaultOption.value = '';
                defaultOption.disabled = true;
                defaultOption.selected = true;
                defaultOption.innerText = 'Wybierz nowego rodzica...';
                select.appendChild(defaultOption);

                // Dodawanie opcji z ViewBag.Values w sposób bezpieczny
                const options = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Values));
                for (const [key, value] of Object.entries(options)) {
                    const option = document.createElement('option');
                    option.value = key;
                    option.innerText = value;
                    select.appendChild(option);
                }

                modalContent.appendChild(select);
            } else if (inputName) {
                const inputField = document.createElement('input');
                inputField.type = "text";
                inputField.name = inputName;
                inputField.className = "form-control";
                inputField.required = true;
                modalContent.appendChild(inputField);
            }
        }

        // Funkcja do obsługi rozwijania i zwijania drzewa
        document.addEventListener("DOMContentLoaded", function () {
            const togglers = document.querySelectorAll(".caret");

            togglers.forEach((caret) => {
                caret.addEventListener("click", function () {
                    this.classList.toggle("caret-down");
                    const nested = this.nextElementSibling;
                    if (nested) {
                        nested.classList.toggle("active");
                    }
                });
            });
        });
    </script>
}